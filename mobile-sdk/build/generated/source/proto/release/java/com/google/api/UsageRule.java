// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/usage.proto

package com.google.api;

/**
 * <pre>
 * Usage configuration rules for the service.
 * NOTE: Under development.
 * Use this rule to configure unregistered calls for the service. Unregistered
 * calls are calls that do not contain consumer project identity.
 * (Example: calls that do not contain an API key).
 * By default, API methods do not allow unregistered calls, and each method call
 * must be identified by a consumer project identity. Use this rule to
 * allow/disallow unregistered calls.
 * Example of an API that wants to allow unregistered calls for entire service.
 *     usage:
 *       rules:
 *       - selector: "*"
 *         allow_unregistered_calls: true
 * Example of a method that wants to allow unregistered calls.
 *     usage:
 *       rules:
 *       - selector: "google.example.library.v1.LibraryService.CreateBook"
 *         allow_unregistered_calls: true
 * </pre>
 *
 * Protobuf type {@code google.api.UsageRule}
 */
public  final class UsageRule extends
    com.google.protobuf.GeneratedMessageLite<
        UsageRule, UsageRule.Builder> implements
    // @@protoc_insertion_point(message_implements:google.api.UsageRule)
    UsageRuleOrBuilder {
  private UsageRule() {
    selector_ = "";
  }
  public static final int SELECTOR_FIELD_NUMBER = 1;
  private java.lang.String selector_;
  /**
   * <pre>
   * Selects the methods to which this rule applies. Use '*' to indicate all
   * methods in all APIs.
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
   * </pre>
   *
   * <code>string selector = 1;</code>
   * @return The selector.
   */
  @java.lang.Override
  public java.lang.String getSelector() {
    return selector_;
  }
  /**
   * <pre>
   * Selects the methods to which this rule applies. Use '*' to indicate all
   * methods in all APIs.
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
   * </pre>
   *
   * <code>string selector = 1;</code>
   * @return The bytes for selector.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSelectorBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(selector_);
  }
  /**
   * <pre>
   * Selects the methods to which this rule applies. Use '*' to indicate all
   * methods in all APIs.
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
   * </pre>
   *
   * <code>string selector = 1;</code>
   * @param value The selector to set.
   */
  private void setSelector(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    selector_ = value;
  }
  /**
   * <pre>
   * Selects the methods to which this rule applies. Use '*' to indicate all
   * methods in all APIs.
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
   * </pre>
   *
   * <code>string selector = 1;</code>
   */
  private void clearSelector() {
    
    selector_ = getDefaultInstance().getSelector();
  }
  /**
   * <pre>
   * Selects the methods to which this rule applies. Use '*' to indicate all
   * methods in all APIs.
   * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
   * </pre>
   *
   * <code>string selector = 1;</code>
   * @param value The bytes for selector to set.
   */
  private void setSelectorBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    selector_ = value.toStringUtf8();
    
  }

  public static final int ALLOW_UNREGISTERED_CALLS_FIELD_NUMBER = 2;
  private boolean allowUnregisteredCalls_;
  /**
   * <pre>
   * If true, the selected method allows unregistered calls, e.g. calls
   * that don't identify any user or application.
   * </pre>
   *
   * <code>bool allow_unregistered_calls = 2;</code>
   * @return The allowUnregisteredCalls.
   */
  @java.lang.Override
  public boolean getAllowUnregisteredCalls() {
    return allowUnregisteredCalls_;
  }
  /**
   * <pre>
   * If true, the selected method allows unregistered calls, e.g. calls
   * that don't identify any user or application.
   * </pre>
   *
   * <code>bool allow_unregistered_calls = 2;</code>
   * @param value The allowUnregisteredCalls to set.
   */
  private void setAllowUnregisteredCalls(boolean value) {
    
    allowUnregisteredCalls_ = value;
  }
  /**
   * <pre>
   * If true, the selected method allows unregistered calls, e.g. calls
   * that don't identify any user or application.
   * </pre>
   *
   * <code>bool allow_unregistered_calls = 2;</code>
   */
  private void clearAllowUnregisteredCalls() {
    
    allowUnregisteredCalls_ = false;
  }

  public static final int SKIP_SERVICE_CONTROL_FIELD_NUMBER = 3;
  private boolean skipServiceControl_;
  /**
   * <pre>
   * If true, the selected method should skip service control and the control
   * plane features, such as quota and billing, will not be available.
   * This flag is used by Google Cloud Endpoints to bypass checks for internal
   * methods, such as service health check methods.
   * </pre>
   *
   * <code>bool skip_service_control = 3;</code>
   * @return The skipServiceControl.
   */
  @java.lang.Override
  public boolean getSkipServiceControl() {
    return skipServiceControl_;
  }
  /**
   * <pre>
   * If true, the selected method should skip service control and the control
   * plane features, such as quota and billing, will not be available.
   * This flag is used by Google Cloud Endpoints to bypass checks for internal
   * methods, such as service health check methods.
   * </pre>
   *
   * <code>bool skip_service_control = 3;</code>
   * @param value The skipServiceControl to set.
   */
  private void setSkipServiceControl(boolean value) {
    
    skipServiceControl_ = value;
  }
  /**
   * <pre>
   * If true, the selected method should skip service control and the control
   * plane features, such as quota and billing, will not be available.
   * This flag is used by Google Cloud Endpoints to bypass checks for internal
   * methods, such as service health check methods.
   * </pre>
   *
   * <code>bool skip_service_control = 3;</code>
   */
  private void clearSkipServiceControl() {
    
    skipServiceControl_ = false;
  }

  public static com.google.api.UsageRule parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.UsageRule parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.UsageRule parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.UsageRule parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.UsageRule parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.api.UsageRule parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.api.UsageRule parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.UsageRule parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.UsageRule parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.api.UsageRule parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.api.UsageRule parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.api.UsageRule parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.google.api.UsageRule prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Usage configuration rules for the service.
   * NOTE: Under development.
   * Use this rule to configure unregistered calls for the service. Unregistered
   * calls are calls that do not contain consumer project identity.
   * (Example: calls that do not contain an API key).
   * By default, API methods do not allow unregistered calls, and each method call
   * must be identified by a consumer project identity. Use this rule to
   * allow/disallow unregistered calls.
   * Example of an API that wants to allow unregistered calls for entire service.
   *     usage:
   *       rules:
   *       - selector: "*"
   *         allow_unregistered_calls: true
   * Example of a method that wants to allow unregistered calls.
   *     usage:
   *       rules:
   *       - selector: "google.example.library.v1.LibraryService.CreateBook"
   *         allow_unregistered_calls: true
   * </pre>
   *
   * Protobuf type {@code google.api.UsageRule}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.api.UsageRule, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.api.UsageRule)
      com.google.api.UsageRuleOrBuilder {
    // Construct using com.google.api.UsageRule.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Selects the methods to which this rule applies. Use '*' to indicate all
     * methods in all APIs.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>string selector = 1;</code>
     * @return The selector.
     */
    @java.lang.Override
    public java.lang.String getSelector() {
      return instance.getSelector();
    }
    /**
     * <pre>
     * Selects the methods to which this rule applies. Use '*' to indicate all
     * methods in all APIs.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>string selector = 1;</code>
     * @return The bytes for selector.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSelectorBytes() {
      return instance.getSelectorBytes();
    }
    /**
     * <pre>
     * Selects the methods to which this rule applies. Use '*' to indicate all
     * methods in all APIs.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>string selector = 1;</code>
     * @param value The selector to set.
     * @return This builder for chaining.
     */
    public Builder setSelector(
        java.lang.String value) {
      copyOnWrite();
      instance.setSelector(value);
      return this;
    }
    /**
     * <pre>
     * Selects the methods to which this rule applies. Use '*' to indicate all
     * methods in all APIs.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>string selector = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearSelector() {
      copyOnWrite();
      instance.clearSelector();
      return this;
    }
    /**
     * <pre>
     * Selects the methods to which this rule applies. Use '*' to indicate all
     * methods in all APIs.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>string selector = 1;</code>
     * @param value The bytes for selector to set.
     * @return This builder for chaining.
     */
    public Builder setSelectorBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSelectorBytes(value);
      return this;
    }

    /**
     * <pre>
     * If true, the selected method allows unregistered calls, e.g. calls
     * that don't identify any user or application.
     * </pre>
     *
     * <code>bool allow_unregistered_calls = 2;</code>
     * @return The allowUnregisteredCalls.
     */
    @java.lang.Override
    public boolean getAllowUnregisteredCalls() {
      return instance.getAllowUnregisteredCalls();
    }
    /**
     * <pre>
     * If true, the selected method allows unregistered calls, e.g. calls
     * that don't identify any user or application.
     * </pre>
     *
     * <code>bool allow_unregistered_calls = 2;</code>
     * @param value The allowUnregisteredCalls to set.
     * @return This builder for chaining.
     */
    public Builder setAllowUnregisteredCalls(boolean value) {
      copyOnWrite();
      instance.setAllowUnregisteredCalls(value);
      return this;
    }
    /**
     * <pre>
     * If true, the selected method allows unregistered calls, e.g. calls
     * that don't identify any user or application.
     * </pre>
     *
     * <code>bool allow_unregistered_calls = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllowUnregisteredCalls() {
      copyOnWrite();
      instance.clearAllowUnregisteredCalls();
      return this;
    }

    /**
     * <pre>
     * If true, the selected method should skip service control and the control
     * plane features, such as quota and billing, will not be available.
     * This flag is used by Google Cloud Endpoints to bypass checks for internal
     * methods, such as service health check methods.
     * </pre>
     *
     * <code>bool skip_service_control = 3;</code>
     * @return The skipServiceControl.
     */
    @java.lang.Override
    public boolean getSkipServiceControl() {
      return instance.getSkipServiceControl();
    }
    /**
     * <pre>
     * If true, the selected method should skip service control and the control
     * plane features, such as quota and billing, will not be available.
     * This flag is used by Google Cloud Endpoints to bypass checks for internal
     * methods, such as service health check methods.
     * </pre>
     *
     * <code>bool skip_service_control = 3;</code>
     * @param value The skipServiceControl to set.
     * @return This builder for chaining.
     */
    public Builder setSkipServiceControl(boolean value) {
      copyOnWrite();
      instance.setSkipServiceControl(value);
      return this;
    }
    /**
     * <pre>
     * If true, the selected method should skip service control and the control
     * plane features, such as quota and billing, will not be available.
     * This flag is used by Google Cloud Endpoints to bypass checks for internal
     * methods, such as service health check methods.
     * </pre>
     *
     * <code>bool skip_service_control = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearSkipServiceControl() {
      copyOnWrite();
      instance.clearSkipServiceControl();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.api.UsageRule)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.api.UsageRule();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "selector_",
            "allowUnregisteredCalls_",
            "skipServiceControl_",
          };
          java.lang.String info =
              "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0208\u0002\u0007" +
              "\u0003\u0007";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.google.api.UsageRule> parser = PARSER;
        if (parser == null) {
          synchronized (com.google.api.UsageRule.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.google.api.UsageRule>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.api.UsageRule)
  private static final com.google.api.UsageRule DEFAULT_INSTANCE;
  static {
    UsageRule defaultInstance = new UsageRule();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      UsageRule.class, defaultInstance);
  }

  public static com.google.api.UsageRule getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<UsageRule> PARSER;

  public static com.google.protobuf.Parser<UsageRule> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

